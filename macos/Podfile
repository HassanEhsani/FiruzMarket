platform :osx, '11.0' # بالا بردن Deployment Target

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run `flutter pub get` first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}."
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  # مهم: این باعث میشه Pods_Runner.framework ساخته بشه
  use_frameworks! :linkage => :static
  use_modular_headers!

  inherit! :search_paths

  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# ✅ post_install با تنظیمات کامل
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_macos_build_settings(target)

    target.build_configurations.each do |config|
      # ست کردن Base Configuration برای هر حالت بیلد
      config_name = config.name.downcase # debug, release, profile
      config.base_configuration_reference = installer.pods_project.files.find do |f|
        f.path == "Target Support Files/Pods-Runner/Pods-Runner.#{config_name}.xcconfig"
      end

      # Deployment Target
      config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '11.0'
      # اجبار معماری به arm64
      config.build_settings['ARCHS'] = 'arm64'

      # حذف فلگ‌های مشکل‌دار
      %w[OTHER_CFLAGS OTHER_CPLUSPLUSFLAGS OTHER_LDFLAGS OTHER_LINKER_FLAGS].each do |key|
        vals = config.build_settings[key]
        if vals.is_a?(Array)
          config.build_settings[key] = vals.reject { |v| v.to_s.include?('-G') }
        elsif vals.is_a?(String)
          config.build_settings[key] = vals.split(' ').reject { |v| v.to_s.include?('-G') }
        end
      end
    end

    # هدف‌گیری مستقیم BoringSSL-GRPC
    if target.name == 'BoringSSL-GRPC'
      target.build_configurations.each do |config|
        config.build_settings['OTHER_CFLAGS'] = ['$(inherited)']
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = ['$(inherited)']
      end
    end
  end
end